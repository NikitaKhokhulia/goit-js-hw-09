{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EACEb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAI/DM,EAAOd,EAAAgB,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAGlEA,E,IAqBPN,EAAKC,KAAKiB,iBAAiB,UAjB3B,SAAsBC,GACpBA,EAAEC,iBAOF,IANA,IAAMC,EAASF,EAAEG,cAAcC,SAE3BjB,EAAQkB,OAAOH,EAAOf,MAAMmB,OAC1BC,EAAOF,OAAOH,EAAOK,KAAKD,OAC1BE,EAASH,OAAOH,EAAOM,OAAOF,OAE3BpB,EAAW,EAAGA,EAAWsB,EAAQtB,IACxCD,EAAcC,EAAUC,GACrBsB,MAAK,SAAAH,G,OAASA,C,IACdI,OAAM,SAAAC,G,OAASA,C,IAClBxB,GAASoB,EAEX1B,EAAKC,KAAK8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n        // Fulfill\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n        //\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const formEl = e.currentTarget.elements;\n\n  let delay = Number(formEl.delay.value);\n  const step = Number(formEl.step.value);\n  const amount = Number(formEl.amount.value);\n\n  for (let position = 0; position < amount; position++) {\n    createPromise(position, delay)\n      .then(value => value)\n      .catch(error => error);\n    delay += step;\n  }\n  refs.form.reset();\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","e","preventDefault","formEl","currentTarget","elements","Number","value","step","amount","then","catch","error","reset"],"version":3,"file":"03-promises.e57768a4.js.map"}